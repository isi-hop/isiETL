#
# Copyright (C) 2025 tondeur-h
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
 
# nom de process d'integration et sa description
# champs optionnels pour décrire le JOB

#-------------HEADER---------------
jobName: "ACTIVITE GLIMS"
jobDescription: "Get data from a CSV file to a DB postgresql"
jobDateTime: "2025-05-31 12:00:00"
#size defaut to 1 if not defined, must be GT 0, if not value is 1
jobBatchSize: "200"
#----------------------------------

# description du connecteur entrant
# type file csv ou database postgresql pour l'instant'
# pour la demo, toutes les configurations possible on été placé ici
#------------INBOUND CONNECTOR-----------
connectorInbound:
  #must be ""file"" or ""database""
  connectortype: 
    value: "file"
  filespath: 
    value : "/home/tondeur-h/dev/isiETL/test/glims"
  checkfiles: 
    value: "true"
  suppressfile:
    value: "false"
  backupdestinationpath:
    value: "/home/tondeur-h/dev/isiETL/test/glims/bak"
  exttype:
    value: "csv"    
#commun a tous les type de connecteur InBound
  nbfields:
    value: "17"
#sauter l'entete... Nb de lignes'
  jumpheader:
    value: "1"
    
#seulement pour le type database inBound
  #connectortype: 
    #value: "database"
  dbdriver:
    value: "org.postgresql.Driver"
  dburl:
    value: "jdbc:postgresql://localhost:5432/mydb"
  dblogin:
    value: "postgres"
  dbpassword:
    value: "admin"

#----------------------------------------

#------------OUTBOUND CONNECTOR----------
# description du connecteur sortant vers la database postgresql
connectorOutbound: 
  connectortype:
    value: "database"
  dbdriver:
    value: "org.postgresql.Driver"
  dburl:
    value: "jdbc:postgresql://localhost:5432/shab"
  dblogin:
    value: "postgres"
  dbpassword:
    value: "admin"
  targetTable:
    value: "activite_glims"    
  #valeur commune aux connecteurs outBound
  #prend false ou true
  ignoreErrors: 
    value: "false"
  #ignorer les doublons (true/false)
  ignoreDuplicates:
    value: "true"

# description des champs de la table sortant postgresql.
#CREATE TABLE public.activite_glims (
#	dossier varchar(120),
#	patient varchar(120),
#	uf varchar(120),
#	lib_uf varchar(120),
#	prescripteur varchar(120),
#	date_dossier_full varchar(120),
#	date_dossier_short varchar(120),
#	annee varchar(120),
#	mois varchar(120),
#	code_acte varchar(120),
#	mnemonic varchar(120),
#	spec varchar(120),
#	description varchar(1024),
#	valeur int4,
#	lettre varchar(120),
#	departement varchar(120),
#	type_visite varchar(120),
#       hascode varchar
#);
fieldsOut:
  dossier:
    defaultValue: ""
    size: "120"
    type: "varchar"
  patient:
    defaultValue: ""
    size: "120"
    type: "varchar"
  uf:
    defaultValue: ""
    size: "120"
    type: "varchar"
  lib_uf:
    defaultValue: ""
    size: "120"
    type: "varchar"
  prescripteur:
    defaultValue: ""
    size: "120"
    type: "varchar"
  date_dossier_full:
    defaultValue: ""
    size: "120"
    type: "varchar"
  date_dossier_short:
    defaultValue: ""
    size: "120"
    type: "varchar"
  annee:
    defaultValue: ""
    size: "120"
    type: "varchar"
  mois:
    defaultValue: ""
    size: "120"
    type: "varchar"
  code_acte:
    defaultValue: ""
    size: "120"
    type: "varchar"
  mnemonic:
    defaultValue: ""
    size: "120"
    type: "varchar"
  spec:
    defaultValue: ""
    size: "120"
    type: "varchar"
  description:
    defaultValue: ""
    size: "1024"
    type: "varchar"
  valeur:
    defaultValue: ""
    size: "4"
    type: "int4"
  lettre:
    defaultValue: ""
    size: "120"
    type: "varchar"
  departement:
    defaultValue: ""
    size: "120"
    type: "varchar"
  type_visite:
    defaultValue: ""
    size: "120"
    type: "varchar"

#-------------------------------------

#-----------FMT PROCESSING------------
# Script DSL qui permet d'éxécuter en 
# per processing les actions de 
# Filtrage, Mapping, Trnsformation
filteringScript: ""
mappingScript: ""
transformerScript: ""
#-------------------------------------

#-----------POSTPROCESSING------------
# Script sql qui pointe vers un fichier SQL valide
# permet d'eéxécuter en post processing ces requêtes
# si destination est une BDD
SQLPostProcessing: "/home/tondeur-h/dev/isiETL/test/glims/postprocessing_activete_glims.scr"
#-------------------------------------