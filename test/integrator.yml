#
# Copyright (C) 2025 tondeur-h
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
 
# nom de process d'integration et sa description
# champs optionnels pour décrire le JOB
#-------------HEADER---------------
jobName: "MyFirst integrator process"
jobDescription: "Get data from a CSV file to a DB postgresql"
jobDateTime: "2025-05-20 12:00:00"
jobBatchMode: "false"
jobBatchSize: "20"
#----------------------------------

# description du connecteur entrant
# type file csv ou database postgresql pour l'instant'
# pour la demo, toutes les configurations possible on été placé ici
#------------INBOUND CONNECTOR-----------
connectorInbound: 
  connectortype: 
    value: "file"
  filespath: 
    value : "c:/users/herve/documents/netbeansprojects/isietl/test"
  checkfiles: 
    value: "true"
  destination:
    value: "c:/users/herve/documents/netbeansprojects/isietl/test/"
  exttype:
    value: "csv"    
#commun a tous les type de connecteur InBound
  nbfields:
    value: "4"
    
#seulement pour le type database inBound
  #connectortype: 
    #value: "database"
  dbdriver:
    value: "org.postgresql.Driver"
  dburl:
    value: "jdbc:postgresql://localhost:5432/mydb"
  dblogin:
    value: "postgres"
  dbpassword:
    value: "admin"

# Description des champs entrants qui vont permettre de construire le flux in
# utile que si c'est une base de données en connecteur entrant.
fieldsIn:
  identifiant:
    defaultValue: ""
    size: "20"
    type: "text"
  nom:
    defaultValue: "noname"
    size: "80"
    type: "text"
  prenom:
    defaultValue: "unknown"
    size: "50"
    type: "text"
  sexe:
    defaultValue: "Male"
    size: "10"
    type: "text"
#----------------------------------------

#------------OUTBOUND CONNECTOR----------
# description du connecteur sortant vers la database postgresql
connectorOutbound: 
  connectortype:
    value: "database"
  dbdriver:
    value: "org.postgresql.Driver"
  dburl:
    value: "jdbc:postgresql://localhost:5432/mydb"
  dblogin:
    value: "postgres"
  dbpassword:
    value: "admin"
  targetTable:
    value: "tabletest"    
  #valeur commune aux connecteurs outBound
  #prend false ou true
  ignoreErrors: 
    value: "false"
  #ignorer les doublons (true/false)
  ignoreDuplicates:
    value: "false"

# description des champs de la table sortant postgresql.
fieldsOut:
  identifiant:
    defaultValue: "vide"
    size: "20"
    type: "varchar"
  nom:
    defaultValue: "noname"
    size: "80"
    type: "varchar"
  prenom:
    defaultValue: "unknown"
    size: "50"
    type: "varchar"
  sexe:
    defaultValue: "M"
    size: "10"
    type: "varchar"
#-------------------------------------

#-----------POSTPROCESSING------------
# Script sql qui pointe vers un fichier SQL valide
# permet d'eéxécuter en post processing ces requêtes.
SQLPostProcessing: ""

# Script DSL Java qui pointe vers un fichier script java valide
# permet d'eéxécuter en post processing ce script.
DSLPostProcessing: ""
#-------------------------------------